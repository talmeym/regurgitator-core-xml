<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:rg="http://core.regurgitator.emarte.com"
           xmlns:rgc="http://common.regurgitator.emarte.com"
           targetNamespace="http://core.regurgitator.emarte.com" elementFormDefault="qualified">

    <xs:import schemaLocation="regurgitatorCommon.xsd" namespace="http://common.regurgitator.emarte.com"/>

	<xs:complexType name="substitute-processor">
		<xs:attribute name="token" type="rgc:populated-string" use="required"/>
		<xs:attribute name="replacement" type="rgc:populated-string" use="required"/>
	</xs:complexType>

    <xs:complexType name="condition">
        <xs:sequence>
            <xs:choice>
				<xs:any xml:base="rgc:populated-string" minOccurs="0"/>
            </xs:choice>
        </xs:sequence>
		<xs:attribute name="id" type="rgc:populated-string"/>
		<xs:attribute name="source" type="rgc:populated-string" use="required"/>
        <xs:attribute name="expectation" type="xs:boolean"/>
		<xs:anyAttribute processContents="skip"/>
    </xs:complexType>

    <xs:complexType name="rule">
        <xs:sequence>
            <xs:element name="condition" type="rg:condition" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id" type="rgc:populated-string"/>
        <xs:attribute name="step" type="rgc:populated-string" use="required"/>
    </xs:complexType>

    <xs:complexType name="rules">
        <xs:sequence>
			<xs:element name="behaviour" type="rgc:contains-one-child" minOccurs="0"/>
            <xs:element name="rule" type="rg:rule" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="default-step" type="rgc:populated-string"/>
        <xs:attribute name="behaviour" type="rgc:populated-string"/>
    </xs:complexType>

    <xs:complexType name="create-parameter">
		<xs:sequence>
			<xs:element name="processor" type="rgc:contains-one-child" minOccurs="0"/>
		</xs:sequence>
        <xs:attribute name="source" type="rgc:populated-string"/>
        <xs:attribute name="value" type="rgc:populated-string"/>
        <xs:attribute name="file" type="rgc:populated-string"/>
		<xs:attribute name="processor" type="rgc:populated-string"/>
        <xs:attributeGroup ref="rgc:prototyped"/>
    </xs:complexType>

	<xs:complexType name="create-response">
		<xs:sequence>
			<xs:element name="processor" type="rgc:contains-one-child" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="source" type="rgc:populated-string"/>
		<xs:attribute name="value" type="rgc:populated-string"/>
		<xs:attribute name="file" type="rgc:populated-string"/>
		<xs:attribute name="processor" type="rgc:populated-string"/>
		<xs:attribute name="id" type="rgc:populated-string"/>
	</xs:complexType>

    <xs:complexType name="extract-processor">
		<xs:attribute name="format" type="rgc:populated-string" use="required"/>
		<xs:attribute name="index" type="xs:integer" use="required"/>
	</xs:complexType>

    <xs:complexType name="identify-session">
        <xs:attribute name="id" type="rgc:populated-string"/>
        <xs:attribute name="source" type="rgc:populated-string" use="required"/>
    </xs:complexType>

    <xs:complexType name="build-parameter">
        <xs:sequence>
            <xs:element name="builder" type="rgc:contains-one-child" minOccurs="0"/>
            <xs:element name="processor" type="rgc:contains-one-child" minOccurs="0"/>
        </xs:sequence>
		<xs:attribute name="builder" type="rgc:populated-string"/>
		<xs:attribute name="processor" type="rgc:populated-string"/>
        <xs:attributeGroup ref="rgc:prototyped"/>
	</xs:complexType>

    <xs:complexType name="generate-parameter">
        <xs:sequence>
            <xs:element name="generator" type="rgc:contains-one-child" minOccurs="0"/>
			<xs:element name="processor" type="rgc:contains-one-child" minOccurs="0"/>
        </xs:sequence>
		<xs:attribute name="generator" type="rgc:populated-string"/>
		<xs:attribute name="processor" type="rgc:populated-string"/>
        <xs:attributeGroup ref="rgc:prototyped"/>
	</xs:complexType>

    <xs:complexType name="Decision">
        <xs:sequence>
            <xs:element name="steps" type="rg:steps"/>
            <xs:element name="rules" type="rg:rules"/>
        </xs:sequence>
        <xs:attribute name="id" type="rgc:populated-string"/>
    </xs:complexType>

    <xs:complexType name="steps">
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
				<xs:any maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="sequence">
        <xs:sequence>
            <xs:choice minOccurs="1" maxOccurs="unbounded">
                <xs:any maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="id" type="rgc:populated-string"/>
    </xs:complexType>

    <xs:complexType name="sequence-ref">
        <xs:attribute name="file" type="rgc:populated-string" use="required"/>
    </xs:complexType>

	<xs:complexType name="number-generator">
		<xs:attribute name="max" type="xs:integer"/>
	</xs:complexType>

	<xs:complexType name="index-of-processor">
		<xs:attribute name="source" type="rgc:populated-string"/>
		<xs:attribute name="value" type="rgc:populated-string"/>
		<xs:attribute name="last" type="xs:boolean"/>
	</xs:complexType>

	<xs:complexType name="index-processor">
		<xs:attribute name="source" type="rgc:populated-string"/>
		<xs:attribute name="value" type="rgc:populated-string"/>
	</xs:complexType>

    <xs:element name="regurgitator-configuration" type="rg:sequence"/>
	<xs:element name="sequence" type="rg:sequence"/>
	<xs:element name="sequence-ref" type="rg:sequence-ref"/>
	<xs:element name="decision" type="rg:Decision"/>
	<xs:element name="create-response" type="rg:create-response"/>
	<xs:element name="build-parameter" type="rg:build-parameter"/>
	<xs:element name="generate-parameter" type="rg:generate-parameter"/>
	<xs:element name="identify-session" type="rg:identify-session"/>
	<xs:element name="create-parameter" type="rg:create-parameter"/>
	<xs:element name="extract-processor" type="rg:extract-processor"/>
	<xs:element name="substitute-processor" type="rg:substitute-processor"/>
	<xs:element name="equals" type="rgc:populated-string"/>
	<xs:element name="contains" type="rgc:populated-string"/>
	<xs:element name="exists" type="xs:boolean"/>
	<xs:element name="number-generator" type="rg:number-generator"/>
	<xs:element name="index-of-processor" type="rg:index-of-processor"/>
	<xs:element name="index-processor" type="rg:index-processor"/>
	<xs:element name="size-processor" type="xs:element"/>
</xs:schema>
